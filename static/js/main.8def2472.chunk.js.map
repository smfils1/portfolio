{"version":3,"sources":["components/Info.js","components/Project/index.js","components/Experiences.js","components/Pages/Portfolio.js","components/Pages/index.js","components/Nav/TopNav/StartNav.js","redux/actions/layout.js","components/Contacts.js","components/Nav/TopNav/EndNav.js","components/Nav/TopNav/index.js","components/Nav/NavItem.js","components/Nav/SideNav/MainNavMenu.js","components/Nav/SideNav/index.js","components/Nav/index.js","App.js","redux/reducers/layout.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","display","flexDirection","color","padding","spacing","backgroundColor","grey","breakpoints","up","icon","margin","btn","alignSelf","title","Info","classes","className","Typography","variant","content","career","Email","email","School","education","LocationOn","location","Button","href","resume","flexWrap","paddingBottom","fontWeight","details","down","tag","background","border","marginLeft","borderRadius","tags","media","height","maxWidth","justifyContent","alignItems","VideoItem","video","src","frameBorder","allowFullScreen","Project","project","map","type","original","thumbnail","renderItem","embedUrl","Tag","value","Grid","container","item","xs","sm","description","detail","i","key","technologies","tech","repo","application","items","defaultImage","showThumbnails","showNav","lazyLoad","showIndex","showPlayButton","Experiences","projects","index","time","titleStyle","fontSize","bubbleStyle","contentStyle","boxShadow","Divider","text","Portfolio","id","dangerouslySetInnerHTML","__html","landing","paddingTop","backgroundImage","profilePic2","backgroundSize","backgroundPosition","position","writer","intro","textShadow","marginBottom","info","mobile_info","bottom","right","HomePage","useTheme","isSmallScreen","useMediaQuery","only","AboutMe","base","shortAboutMe","loop","forEach","push","steps","Infinity","fullName","clsx","toolbar","paddingRight","iconButton","StartNav","dispatch","useDispatch","Toolbar","gutters","IconButton","aria-label","edge","onClick","Menu","Contacts","github","GitHub","LinkedIn","paddingLeft","EndNav","grow","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","TopNav","AppBar","elevation","active","listItem","textAlign","link","textDecoration","cursor","NavItem","to","Item","ListItem","ListItemText","primary","smooth","img","mainNavLinks","profile","marginTop","lineHeight","subtitle","contacts","MainNavMenu","isMinScreenMd","handleItemClick","Profile","name","alt","profilePic1","List","flexShrink","whiteSpace","drawerOpen","enteringScreen","drawerClose","overflowX","navHead","mixins","SideNav","isOpen","isMaxScreenSm","isDrawerOpen","useSelector","layout","Drawer","open","paper","flex","minHeight","overflow","NavBar","children","App","Nav","exact","path","render","props","initialState","layoutReducer","state","action","payload","reducers","combineReducers","middleware","thunkMiddleware","promiseMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8def2472.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Typography, Button } from \"@material-ui/core/\";\nimport content from \"../content.json\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { School, Email, LocationOn } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"white\",\n    padding: theme.spacing(2),\n    backgroundColor: grey[900],\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 300,\n      backgroundColor: \"black\",\n    },\n  },\n  icon: {\n    margin: theme.spacing(0.5, 1),\n  },\n  btn: {\n    margin: theme.spacing(1),\n    alignSelf: \"center\",\n    backgroundColor: \"white\",\n  },\n  title: {\n    color: grey[300],\n  },\n}));\n\nconst Info = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"button\" className={classes.title}>\n        {content.career}\n      </Typography>\n      <div>\n        <Email className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.email}\n        </Typography>\n      </div>\n      <div>\n        <School className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.education}\n        </Typography>\n      </div>\n      <div>\n        <LocationOn className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.location}\n        </Typography>\n      </div>\n      <div className={classes.btn}>\n        <Button href={content.resume}>Resume</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { makeStyles, Typography, Button, Grid } from \"@material-ui/core/\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport \"./overrides.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n    fontWeight: 600,\n  },\n  details: {\n    padding: theme.spacing(1, 0),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(0),\n    },\n  },\n  tag: {\n    color: \"black\",\n    background: \"white\",\n    border: \"solid 2px rgb(201, 163, 143)\",\n    padding: theme.spacing(0.5, 1),\n    margin: theme.spacing(1),\n    marginLeft: theme.spacing(0),\n    display: \"inline\",\n  },\n  btn: {\n    borderRadius: 0,\n    color: \"white\",\n    background: \"black\",\n    margin: theme.spacing(1),\n  },\n  tags: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(0, 1),\n  },\n  media: {\n    height: \"100%\",\n    maxWidth: 350,\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst VideoItem = ({ video }) => {\n  return (\n    <div className=\"video-wrapper\">\n      <iframe\n        width=\"100%\"\n        title=\"video\"\n        src={video}\n        frameBorder=\"0\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n};\n\nconst Project = ({ project }) => {\n  const classes = useStyles();\n  const media = project.media.map(({ type, src }) => {\n    if (type === \"image\") {\n      return {\n        original: src,\n        thumbnail: src,\n      };\n    } else {\n      return {\n        renderItem: () => <VideoItem video={src} />,\n\n        embedUrl: src,\n        thumbnail: \"https://via.placeholder.com/150?text=VIDEO\",\n      };\n    }\n  });\n  const Tag = ({ value }) => <div className={classes.tag}>{value}</div>;\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} sm={8}>\n          {\" \"}\n          <div>\n            <Typography className={classes.title} variant=\"h4\">\n              {\" \"}\n              {project.title}\n            </Typography>\n            <Typography variant=\"body1\">\n              {\" \"}\n              <strong>{project.description}</strong>\n            </Typography>\n            <div className={classes.details}>\n              <ul>\n                {project.details.map((detail, i) => (\n                  <li key={i}>\n                    <Typography variant=\"body1\">{detail}</Typography>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <Typography variant=\"caption\">TECHNOLOGIES</Typography>\n              <div className={classes.tags}>\n                {project.technologies.map((tech, i) => (\n                  <Tag key={i} value={tech} />\n                ))}\n              </div>\n            </div>\n            <div>\n              <Button className={classes.btn} href={project.repo}>\n                Github Repo\n              </Button>\n              <Button className={classes.btn} href={project.application}>\n                Open Application\n              </Button>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <div className={classes.media}>\n            <ImageGallery\n              items={media}\n              defaultImage={media[0]}\n              showThumbnails={true}\n              showNav={false}\n              lazyLoad={true}\n              showIndex={false}\n              showPlayButton={false}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { Fragment } from \"react\";\nimport { Divider } from \"@material-ui/core/\";\nimport { Timeline, TimelineEvent } from \"react-event-timeline\";\nimport Project from \"./Project\";\nimport content from \"../content.json\";\n\nconst Experiences = () => {\n  return (\n    <Timeline>\n      {content.projects.map((project, index) => {\n        return (\n          <Fragment key={index}>\n            <TimelineEvent\n              title={project.time}\n              titleStyle={{ color: \"rgb(168, 92, 47)\", fontSize: \"1.2em\" }}\n              bubbleStyle={{ border: \"solid 2px rgb(201, 163, 143)\" }}\n              contentStyle={{\n                backgroundColor: \"transparent\",\n                boxShadow: \"none\",\n              }}\n            >\n              <Project project={project} />\n              <Divider />\n            </TimelineEvent>\n          </Fragment>\n        );\n      })}\n    </Timeline>\n  );\n};\n\nexport default Experiences;\n","import React from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core/\";\nimport content from \"../../content.json\";\nimport { grey } from \"@material-ui/core/colors\";\n\nimport Experiences from \"../Experiences\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(4),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2),\n    },\n    backgroundColor: grey[100],\n  },\n  text: {\n    paddingBottom: theme.spacing(2),\n  },\n  description: {\n    padding: theme.spacing(0.5),\n    color: \"white\",\n    backgroundColor: \"black\",\n    display: \"inline\",\n  },\n}));\n\nconst Portfolio = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} id=\"portfolio\">\n      <Typography className={classes.text} variant=\"h4\">\n        PORTFOLIO\n      </Typography>\n      <div>\n        {\" \"}\n        <Typography\n          className={classes.description}\n          variant=\"body1\"\n          dangerouslySetInnerHTML={{ __html: content.description }}\n        />\n      </div>\n      <Experiences />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core/\";\nimport content from \"../../content.json\";\nimport Info from \"../Info\";\nimport { grey } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport Typical from \"react-typical\";\n\nimport Portfolio from \"./Portfolio\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  landing: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(10),\n    height: \"100vh\",\n    width: \"100%\",\n    backgroundImage: `url(${content.profilePic2})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    position: \"relative\",\n  },\n  writer: {\n    padding: theme.spacing(0.5),\n    color: \"white\",\n    backgroundColor: \"black\",\n    display: \"inline\",\n    fontSize: \"1.5em\",\n  },\n  content: {\n    margin: theme.spacing(2),\n  },\n  intro: {\n    fontWeight: 500,\n    color: \"white\",\n    textShadow: \"1px 1px 1px rgb(0, 0, 0)\",\n    marginBottom: theme.spacing(1),\n  },\n  info: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: grey[300],\n  },\n  mobile_info: {\n    position: \"absolute\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.only(\"xs\"));\n\n  const AboutMe = () => {\n    const base = content.shortAboutMe.base;\n    const writer = [];\n    content.shortAboutMe.loop.forEach((value) => {\n      writer.push(base, 150, base + value, 150);\n    });\n    return (\n      <Typical steps={writer} loop={Infinity} className={classes.writer} />\n    );\n  };\n  return (\n    <div className={classes.root} id=\"home\">\n      <div className={classes.landing}>\n        <div className={classes.content}>\n          <Typography className={classes.intro} variant=\"h3\">\n            I'm {content.fullName},\n          </Typography>\n          <AboutMe />\n        </div>\n      </div>\n      <div\n        className={clsx({\n          [classes.info]: isSmallScreen,\n          [classes.mobile_info]: !isSmallScreen,\n        })}\n      >\n        <Info />\n      </div>\n      <Portfolio />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, IconButton } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\n\nimport { toggleDrawer } from \"../../../redux/actions/layout\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: \"0px\",\n  },\n  iconButton: {\n    color: \"white\",\n  },\n}));\n\nconst StartNav = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <Toolbar\n      classes={{\n        gutters: classes.toolbar,\n      }}\n    >\n      <IconButton\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        className={classes.iconButton}\n        onClick={() => dispatch(toggleDrawer())}\n      >\n        <MenuIcon />\n      </IconButton>\n    </Toolbar>\n  );\n};\n\nexport default StartNav;\n","const toggleDrawer = () => {\n  return {\n    type: \"TOGGLE_DRAWER\",\n  };\n};\n\nconst setDrawer = (isDrawerOpen) => {\n  return {\n    type: \"SET_DRAWER\",\n    payload: { isDrawerOpen },\n  };\n};\n\nexport { setDrawer, toggleDrawer };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/\";\nimport { LinkedIn, Email, GitHub } from \"@material-ui/icons\";\n\nimport content from \"../content.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    margin: theme.spacing(2),\n  },\n  icon: {\n    margin: theme.spacing(0.5, 1),\n    color: \"white\",\n  },\n}));\n\nconst Contacts = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <a href={\"mailto:\" + content.email}>\n        <Email className={classes.icon} />\n      </a>\n      <a href={\"https://github.com/\" + content.github}>\n        <GitHub className={classes.icon} />\n      </a>\n      <a href={\"https://www.linkedin.com/in/\" + content.github}>\n        <LinkedIn className={classes.icon} />\n      </a>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\n\nimport Contacts from \"../../Contacts\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingLeft: \"0px\",\n  },\n}));\n\nconst EndNav = () => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar\n      classes={{\n        gutters: classes.toolbar,\n      }}\n    >\n      <Contacts />\n    </Toolbar>\n  );\n};\n\nexport default EndNav;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar } from \"@material-ui/core\";\nimport StartNav from \"./StartNav\";\nimport EndNav from \"./EndNav\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"black\",\n    display: \"flex\",\n    flexDirection: \"row\",\n\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n}));\n\nconst TopNav = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {/* <CssBaseline /> */}\n      <AppBar elevation={0} position=\"fixed\" className={classes.appBar}>\n        <StartNav />\n        <div className={classes.grow} />\n\n        <EndNav />\n      </AppBar>\n    </div>\n  );\n};\n\nexport default TopNav;\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    backgroundColor: grey[300],\n    \"&:hover\": { backgroundColor: grey[400] },\n  },\n  icon: {\n    padding: theme.spacing(0, 1),\n  },\n  listItem: {\n    textAlign: \"center\",\n  },\n  link: {\n    color: \"inherit\",\n  },\n  text: {\n    fontSize: \"1.3em\",\n    fontWeight: 100,\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n    cursor: \"pointer\",\n  },\n}));\n\nconst NavItem = ({ to, title, onClick }) => {\n  const classes = useStyles();\n  const Item = (\n    <ListItem className={classes.listItem} onClick={onClick}>\n      <ListItemText primary={title} classes={{ primary: classes.text }} />\n    </ListItem>\n  );\n\n  return to ? (\n    <Link to={to} smooth={true} duration={1000} className={classes.link}>\n      {Item}\n    </Link>\n  ) : (\n    <> {Item} </>\n  );\n};\n\nexport default NavItem;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { grey } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport {\n  List,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from \"@material-ui/core\";\n\nimport NavItem from \"../NavItem\";\nimport Contacts from \"../../Contacts\";\nimport { toggleDrawer } from \"../../../redux/actions/layout\";\nimport content from \"../../../content.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  img: {\n    width: 110,\n    height: 110,\n    borderRadius: \"50%\",\n  },\n  mainNavLinks: {\n    height: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  profile: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    fontWeight: 700,\n    lineHeight: \"1em\",\n  },\n  subtitle: {\n    color: grey[500],\n  },\n  contacts: {\n    alignSelf: \"center\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst MainNavMenu = () => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isMinScreenMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const dispatch = useDispatch();\n  const handleItemClick = () => {\n    if (!isMinScreenMd) {\n      dispatch(toggleDrawer(isMinScreenMd));\n    }\n  };\n\n  const Profile = ({ name, career }) => (\n    <div className={classes.profile}>\n      <img alt=\"profile\" className={classes.img} src={content.profilePic1} />\n      <Typography variant=\"h5\" className={classes.title}>\n        {name}\n      </Typography>\n      <Typography variant=\"button\" className={clsx(classes.subtitle)}>\n        {career}\n      </Typography>\n    </div>\n  );\n\n  return (\n    <List className={classes.root}>\n      <Profile name={content.fullName} career={content.career} />\n      <div className={classes.mainNavLinks}>\n        <NavItem to=\"home\" title=\"Home\" onClick={handleItemClick} />{\" \"}\n        <NavItem to=\"portfolio\" title=\"Portfolio\" onClick={handleItemClick} />\n      </div>\n      <div className={classes.grow} />\n      <div className={classes.contacts}>\n        <Contacts />\n      </div>\n    </List>\n  );\n};\n\nexport default MainNavMenu;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { Drawer, useMediaQuery } from \"@material-ui/core\";\nimport MainNavMenu from \"./MainNavMenu\";\nimport StartNav from \"../TopNav/StartNav\";\n\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create([\"width\", \"margin\", \"visibility\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: 0,\n  },\n  navHead: {\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n}));\n\nconst SideNav = () => {\n  const theme = useTheme();\n  const isMaxScreenSm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const isDrawerOpen = useSelector(({ layout }) => layout.isDrawerOpen);\n  let isOpen;\n  if (isMaxScreenSm) isOpen = isDrawerOpen;\n  else isOpen = true; //We will control open by css\n  const classes = useStyles();\n  return (\n    <Drawer\n      variant={isMaxScreenSm ? \"temporary\" : \"persistent\"}\n      open={isOpen}\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: isOpen,\n        [classes.drawerClose]: !isOpen,\n      })}\n      classes={{\n        paper: clsx(classes.drawer, {\n          [classes.drawerOpen]: isOpen,\n          [classes.drawerClose]: !isOpen,\n        }),\n      }}\n    >\n      <div className={classes.navHead}>{isMaxScreenSm && <StartNav />}</div>\n      <MainNavMenu />\n    </Drawer>\n  );\n};\n\nexport default SideNav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport TopNav from \"./TopNav\";\nimport SideNav from \"./SideNav\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  content: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    overflow: \"hidden\",\n  },\n  toolbar: {\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n}));\nconst NavBar = ({ children }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMaxScreenSm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const isDrawerOpen = useSelector(({ layout }) => layout.isDrawerOpen);\n  return (\n    <div className={classes.root}>\n      {isMaxScreenSm && !isDrawerOpen && <TopNav />}\n      <SideNav />\n      <div className={classes.content}>\n        <div className={clsx({ [classes.toolbar]: isMaxScreenSm })} />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./components/Pages\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </Nav>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  isDrawerOpen: false,\n};\n\nconst layoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"TOGGLE_DRAWER\":\n      return { ...state, isDrawerOpen: !state.isDrawerOpen };\n    case \"SET_DRAWER\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\nexport default layoutReducer;\n","import { combineReducers } from \"redux\";\nimport layout from \"./layout\";\n\nconst reducers = combineReducers({\n  layout,\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport promiseMiddleware from \"redux-promise\";\nimport logger from \"redux-logger\";\n\nlet middleware = [thunkMiddleware, promiseMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n}\n\nconst middlewareEnhancer = applyMiddleware(...middleware);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(middlewareEnhancer));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}